// Code generated by goctl. DO NOT EDIT.
// Source: content_security.proto

package contentsecurityservice

import (
	"context"

	"null-links/rpc_service/content_security/pb/content_security"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	WebsetCheckConfirmReq  = content_security.WebsetCheckConfirmReq
	WebsetCheckConfirmResp = content_security.WebsetCheckConfirmResp
	WebsetCheckQueryReq    = content_security.WebsetCheckQueryReq
	WebsetCheckQueryResp   = content_security.WebsetCheckQueryResp

	ContentSecurityService interface {
		WebsetCheckQuery(ctx context.Context, in *WebsetCheckQueryReq, opts ...grpc.CallOption) (*WebsetCheckQueryResp, error)
		WebsetCheckConfirm(ctx context.Context, in *WebsetCheckConfirmReq, opts ...grpc.CallOption) (*WebsetCheckConfirmResp, error)
	}

	defaultContentSecurityService struct {
		cli zrpc.Client
	}
)

func NewContentSecurityService(cli zrpc.Client) ContentSecurityService {
	return &defaultContentSecurityService{
		cli: cli,
	}
}

func (m *defaultContentSecurityService) WebsetCheckQuery(ctx context.Context, in *WebsetCheckQueryReq, opts ...grpc.CallOption) (*WebsetCheckQueryResp, error) {
	client := content_security.NewContentSecurityServiceClient(m.cli.Conn())
	return client.WebsetCheckQuery(ctx, in, opts...)
}

func (m *defaultContentSecurityService) WebsetCheckConfirm(ctx context.Context, in *WebsetCheckConfirmReq, opts ...grpc.CallOption) (*WebsetCheckConfirmResp, error) {
	client := content_security.NewContentSecurityServiceClient(m.cli.Conn())
	return client.WebsetCheckConfirm(ctx, in, opts...)
}
