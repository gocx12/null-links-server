syntax = "v1"

import "./user/login.api"
import "./user/register.api"
import "./user/check_username.api"
import "./user/get_validation_code.api"
import "./user/userinfo.api"
import "./user/modify.api"
import "./webset/feed.api"
import "./webset/publish_action.api"
import "./webset/publish_list.api"
import "./webset/favorite_action.api"
import "./webset/favorite_list.api"
import "./webset/like_action.api"
import "./webset/webset_info.api"
import "./social/relation_action.api"
import "./social/relation_follow_list.api"
import "./social/relation_follower_list.api"
import "./social/relation_friend_list.api"
import "./social/message_action.api"
import "./common/upload.api"
import "./common/report.api"
import "./chat/history.api"
import "./chat/like.api"
import "./chat/link.api"
import "./chat/get_all_topic.api"
import "./chat/chat_ws.api"
import "./pay/withdraw.api"

type PingReq {}

type PingResp {
	StatusCode int32  `json:"status_code"`
	StatusMsg  string `json:"status_msg,optional"`
	Data       string `json:"data"`
}

service service {
	@handler Ping
	get /ping (PingReq) returns (PingResp)
}

@server (
	prefix: /user
	group:  user
)
service service {
	@handler Register
	post /register (RegisterReq) returns (RegisterResp)

	@handler Login
	post /login (LoginReq) returns (LoginResp)

	@handler CheckUsername
	get /check_username (CheckUsernameReq) returns (CheckUsernameResp)

	@handler GetValidationCode
	get /get_validation_code (GetValidationCodeReq) returns (GetValidationCodeResp)
}

@server (
	jwt:    Auth
	prefix: /user
	group:  user
)
service service {
	@handler UserInfo
	get /info (UserInfoReq) returns (UserInfoResp)

	@handler Modify
	post /modify (ModifyReq) returns (ModifyResp)
}

@server (
	prefix: /webset
	group:  webset
)
service service {
	@handler Feed
	get /feed (FeedReq) returns (FeedResp)

	@handler WebsetInfo
	get /info (WebsetInfoReq) returns (WebsetInfoResp)
}

@server (
	jwt:    Auth
	prefix: /webset
	group:  webset
)
service service {
	@handler LikeAction
	get /like/action (LikeActionReq) returns (LikeActionResp)

	@handler PublishAction
	post /publish/action (PublishActionReq) returns (PublishActionResp)

	@handler PublishList
	get /publish/list (PublishListReq) returns (PublishListResp)

	@handler FavoriteAction
	get /favorite/action (FavoriteActionReq) returns (FavoriteActionResp)

	@handler FavoriteList
	get /favorite/list (FavoriteListReq) returns (FavoriteListResp)
}

@server (
	jwt:    Auth
	prefix: /social
	group:  social
)
service service {
	@handler RelationAction
	get /relation/action (RelationActionReq) returns (RelationActionResp)

	@handler RelationFollowList
	get /relation/follow/list (RelationFollowListReq) returns (RelationFollowListResp)

	@handler RelationFollowerList
	get /relation/follower/list (RelationFollowerListReq) returns (RelationFollowerListResp)

	@handler RelationFriendList
	get /relation/friend/list (RelationFriendListReq) returns (RelationFriendListResp)
}

@server (
	jwt:    Auth
	prefix: /common
	group:  common
)
service service {
	@handler UploadPic
	post /upload/pic (UploadPicReq) returns (UploadPicResp)

	@handler UploadFile
	post /upload/file (UploadFileReq) returns (UploadFileResp)

	@handler Report
	post /report (ReportReq) returns (ReportResp)
}

@server (
	prefix: /chat
	group:  chat
)
service service {
	@handler ChatWs
	get /ws (ChatWsReq) returns (ChatWsResp)

	@handler History
	get /history (ChatHistoryReq) returns (ChatHistoryResp)

	@handler GetAllTopic
	get /get_all_topic (ChatGetAllTopicReq) returns (ChatGetAllTopicResp)
}

@server (
	jwt:    Auth
	prefix: /chat
	group:  chat
)
service service {
	@handler Like
	get /like (ChatLikeReq) returns (ChatLikeResp)

	@handler Link
	get /link (ChatLinkReq) returns (ChatLinkResp)
}

@server (
	jwt:    Auth
	prefix: /pay
	group:  pay
)
service service {
	@handler Withdraw
	get /withdraw (WithdrawReq) returns (WithdrawResp)
}

