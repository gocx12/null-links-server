syntax = "v1"

import "./user/login.api"
import "./user/register.api"
import "./user/userinfo.api"

import "./webset/feed.api"
import "./webset/publish_action.api"
import "./webset/publish_list.api"
import "./webset/favorite_action.api"
import "./webset/favorite_list.api"
import "./webset/chat_action.api"
import "./webset/chat_list.api"
import "./webset/chat_websocket.api"
import "./webset/like_action.api"
import "./webset/webset_info.api"

import "./social/relation_action.api"
import "./social/relation_follow_list.api"
import "./social/relation_follower_list.api"
import "./social/relation_friend_list.api"
import "./social/message_action.api"
import "./social/message_chat.api"

type PingReq {
}

type PingResp {
	StatusCode int32  `json:"status_code"`
	StatusMsg  string `json:"status_msg,optional"`
	Data       string `json:"data"`
}
service service {
	@handler Ping
	get /ping (PingReq) returns (PingResp)
}

@server (
	prefix: /user
	group:  user
)
service service {
	@handler Register
	post /register (RegisterReq) returns (RegisterResp)

	@handler Login
	post /login (LoginReq) returns (LoginResp)

	@handler UserInfo
	get /info (UserInfoReq) returns (UserInfoResp)
}

@server (
	group:  webset
)
service service {
	@handler Feed
	get /feed (FeedReq) returns (FeedResp)

	@handler ChatList
	get /chat/list (ChatListReq) returns (ChatListResp)

	@handler ChatWebSocket
	post /chat/websocket (ChatWebSocketReq) returns (ChatWebSocketResp)

	@handler WebsetInfo
	get /info (WebsetInfoReq) returns (WebsetInfoResp)

}

@server (
	jwt:	Auth
	group:  webset
)
service service {
	@handler Like
	post /like (LikeActionReq) returns (LikeActionResp)

	@handler PublishAction
	post /publish/action (PublishActionReq) returns (PublishActionResp)

	@handler PublishList
	post /publish/list (PublishListReq) returns (PublishListResp)

	@handler FavoriteAction
	get /favorite/action (FavoriteActionReq) returns (FavoriteActionResp)

	@handler FavoriteList
	get /favorite/list (FavoriteListReq) returns (FavoriteListResp)

	@handler ChatAction
	post /chat/action (ChatActionReq) returns (ChatActionResp)
}

@server (
	jwt:	Auth
	group:  social
)
service service {
	@handler RelationAction
	post /relation/action (RelationActionReq) returns (RelationActionResp)

	@handler RelationFollowList
	get /relation/follow/list (RelationFollowListReq) returns (RelationFollowListResp)

	@handler RelationFollowerList
	get /relation/follower/list (RelationFollowerListReq) returns (RelationFollowerListResp)

	@handler RelationFriendList
	get /relation/friend/list (RelationFriendListReq) returns (RelationFriendListResp)

	@handler MessageAction
	post /message/action (MessageActionReq) returns (MessageActionResp)

	@handler MessageChat
	get /message/chat (MessageChatReq) returns (MessageChatResp)
}