// Code generated by goctl. DO NOT EDIT.
package types

type PingReq struct {
}

type PingResp struct {
	StatusCode int32  `json:"status_code"`
	StatusMsg  string `json:"status_msg,optional"`
	Data       string `json:"data"`
}

type LoginReq struct {
	Username  string `json:"username,optional"`
	UserEmail string `json:"user_email,optional"`
	Password  string `json:"password"`
}

type LoginResp struct {
	StatusCode int32  `json:"status_code"`
	StatusMsg  string `json:"status_msg,optional"`
	Token      string `json:"token"`
	UserID     int64  `json:"user_id"`
}

type RegisterReq struct {
	Username  string `json:"username"`
	UserEmail string `json:"user_email"`
	Password  string `json:"password"`
}

type RegisterResp struct {
	StatusCode int32  `json:"status_code"`
	StatusMsg  string `json:"status_msg,optional"`
	Token      string `json:"token"`
	UserID     int64  `json:"user_id"`
}

type CheckUsernameReq struct {
	Username string `form:"username,optional"`
}

type CheckUsernameResp struct {
	StatusCode int32  `json:"status_code"`
	StatusMsg  string `json:"status_msg,optional"`
	Result     int32  `json:"result"`
}

type GetValidationCodeReq struct {
	Email string `form:"email"`
}

type GetValidationCodeResp struct {
	StatusCode int32  `json:"status_code"`
	StatusMsg  string `json:"status_msg,optional"`
}

type UserInfoReq struct {
	Token  string `form:"token"`
	UserID int64  `form:"user_id"`
}

type UserInfoResp struct {
	StatusCode int32  `json:"status_code"`
	StatusMsg  string `json:"status_msg,optional"`
	User       User   `json:"user_info"`
}

type User struct {
	Id            int64  `json:"id"`
	Name          string `json:"name"`
	Email         string `json:"email"`
	AvatarUrl     string `json:"avatar_url,optional"`
	BackgroundUrl string `json:"background_url"`
	FollowCount   int64  `json:"follow_count,optional"`
	FollowerCount int64  `json:"follower_count,optional"`
	IsFollow      bool   `json:"is_follow"`
	Signature     string `json:"signature,optional"`
	WorkCount     int64  `json:"work_count,optional"`
}

type UserShort struct {
	Id        int64  `json:"id"`
	Name      string `json:"name"`
	AvatarUrl string `json:"avatar_url,optional"`
}

type FeedReq struct {
	LatestTime string `form:"latest_time,optional"`
	Token      string `form:"token,optional"`
	Page       string `form:"page,optional"`
	PageSize   string `form:"page_size,optional"`
}

type FeedResp struct {
	StatusCode int32         `json:"status_code"`
	StatusMsg  string        `json:"status_msg,optional"`
	NextTime   int64         `json:"next_time"`
	WebsetList []WebsetShort `json:"webset_list"`
}

type Webset struct {
	ID            int64     `json:"id"`
	Title         string    `json:"title"`
	Describe      string    `json:"describe"`
	AuthorInfo    User      `json:"author_info"`
	CoverURL      string    `json:"cover_url"`
	LikeCount     int64     `json:"like_count"`
	IsLike        bool      `json:"is_like"`
	FavoriteCount int64     `json:"favorite_count"`
	IsFavorite    bool      `json:"is_favorite"`
	WebLinkList   []WebLink `json:"weblink_list"`
}

type WebsetShort struct {
	ID         int64     `json:"id"`
	Title      string    `json:"title"`
	Describe   string    `json:"describe"`
	AuthorInfo UserShort `json:"author_info"`
}

type WebLink struct {
	ID         int64  `json:"id"`
	Describe   string `json:"describe"`
	Url        string `json:"url"`
	AuthorInfo User   `json:"author_info"`
	CoverURL   string `json:"cover_url"`
}

type PublishActionReq struct {
	Token       string           `json:"token,omitempty"`
	Title       string           `json:"title"`
	Category    string           `json:"category"`
	AuthorId    int64            `json:"author_id"`
	Describe    string           `json:"describe"`
	WebLinkList []WebLinkPublish `json:"weblink_list"`
}

type WebLinkPublish struct {
	Url      string `json:"url"`
	Describe string `json:"describe"`
	CoverURL string `json:"cover_url"`
}

type PublishActionResp struct {
	StatusCode int32  `json:"status_code"`
	StatusMsg  string `json:"status_msg,optional"`
}

type PublishListReq struct {
	Token  string `form:"token"`
	UserID int64  `form:"user_id"`
}

type PublishListResp struct {
	StatusCode int32    `json:"status_code"`
	StatusMsg  string   `json:"status_msg,optional"`
	WebsetList []Webset `json:"webset_list"`
}

type FavoriteActionReq struct {
	ActionType int32  `form:"action_type"`
	Token      string `form:"token"`
	WebsetID   int64  `form:"webset_id"`
}

type FavoriteActionResp struct {
	StatusCode int32  `json:"status_code"`
	StatusMsg  string `json:"status_msg,optional"`
}

type FavoriteListReq struct {
	Token  string `form:"token"`
	UserID int64  `form:"user_id"`
}

type FavoriteListResp struct {
	StatusCode int32    `json:"status_code"`
	StatusMsg  string   `json:"status_msg,optional"`
	WebsetList []Webset `json:"webset_list"`
}

type LikeActionReq struct {
	ActionType int32  `json:"action_type"`
	WebsetID   int64  `json:"webset_id"`
	Token      string `json:"token"`
}

type LikeActionResp struct {
	StatusCode int32  `json:"status_code"`
	StatusMsg  string `json:"status_msg,optional"`
}

type WebsetInfoReq struct {
	Token    string `form:"token"`
	UserID   int64  `form:"user_id"`
	WebsetID int64  `form:"webset_id"`
}

type WebsetInfoResp struct {
	StatusCode int32       `json:"status_code"`
	StatusMsg  string      `json:"status_msg,optional"`
	WebsetInfo WebsetShort `json:"webset_info"`
}

type RelationActionReq struct {
	ActionType string `form:"action_type"`
	ToUserID   int64  `form:"to_user_id"`
	Token      string `form:"token"`
}

type RelationActionResp struct {
	StatusCode int32  `json:"status_code"`
	StatusMsg  string `json:"status_msg,optional"`
}

type FriendUser struct {
	User    User   `json:"friend_user_info"`
	Message string `json:"message,optional"`
	MsgType int    `json:"msg_type"`
}

type RelationFollowListReq struct {
	Token  int64  `form:"token"`
	UserID string `form:"user_id"`
}

type RelationFollowListResp struct {
	StatusCode string       `json:"status_code"`
	StatusMsg  string       `json:"status_msg,optional"`
	UserList   []FriendUser `json:"user_list"`
}

type RelationFollowerListReq struct {
	Token  string `form:"token"`
	UserID string `form:"user_id"`
}

type RelationFollowerListResp struct {
	StatusCode string `json:"status_code"`
	StatusMsg  string `json:"status_msg,optional"`
	UserList   []User `json:"follower_list"`
}

type RelationFriendListReq struct {
	Token  string `form:"token"`
	UserID string `form:"user_id"`
}

type RelationFriendListResp struct {
	StatusCode string `json:"status_code"`
	StatusMsg  string `json:"status_msg,optional"`
	UserList   []User `json:"friend_list"`
}

type MessageActionReq struct {
	ActionType string `form:"action_type"`
	Content    string `form:"content"`
	ToUserID   string `form:"to_user_id"`
	Token      string `form:"token"`
}

type MessageActionResp struct {
	StatusCode int32  `json:"status_code"`
	StatusMsg  string `json:"status_msg,optional"`
}
