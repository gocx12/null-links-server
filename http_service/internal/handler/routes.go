// Code generated by goctl. DO NOT EDIT.
package handler

import (
	"net/http"

	social "null-links/http_service/internal/handler/social"
	user "null-links/http_service/internal/handler/user"
	webset "null-links/http_service/internal/handler/webset"
	"null-links/http_service/internal/svc"

	"github.com/zeromicro/go-zero/rest"
)

func RegisterHandlers(server *rest.Server, serverCtx *svc.ServiceContext) {
	server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodGet,
				Path:    "/ping",
				Handler: PingHandler(serverCtx),
			},
		},
	)

	server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodPost,
				Path:    "/register",
				Handler: user.RegisterHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/login",
				Handler: user.LoginHandler(serverCtx),
			},
			{
				Method:  http.MethodGet,
				Path:    "/info",
				Handler: user.UserInfoHandler(serverCtx),
			},
		},
		rest.WithPrefix("/user"),
	)

	server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodGet,
				Path:    "/feed",
				Handler: webset.FeedHandler(serverCtx),
			},
			{
				Method:  http.MethodGet,
				Path:    "/info",
				Handler: webset.WebsetInfoHandler(serverCtx),
			},
		},
	)

	server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodPost,
				Path:    "/like",
				Handler: webset.LikeHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/publish/action",
				Handler: webset.PublishActionHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/publish/list",
				Handler: webset.PublishListHandler(serverCtx),
			},
			{
				Method:  http.MethodGet,
				Path:    "/favorite/action",
				Handler: webset.FavoriteActionHandler(serverCtx),
			},
			{
				Method:  http.MethodGet,
				Path:    "/favorite/list",
				Handler: webset.FavoriteListHandler(serverCtx),
			},
		},
		rest.WithJwt(serverCtx.Config.Auth.AccessSecret),
	)

	server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodPost,
				Path:    "/relation/action",
				Handler: social.RelationActionHandler(serverCtx),
			},
			{
				Method:  http.MethodGet,
				Path:    "/relation/follow/list",
				Handler: social.RelationFollowListHandler(serverCtx),
			},
			{
				Method:  http.MethodGet,
				Path:    "/relation/follower/list",
				Handler: social.RelationFollowerListHandler(serverCtx),
			},
			{
				Method:  http.MethodGet,
				Path:    "/relation/friend/list",
				Handler: social.RelationFriendListHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/message/action",
				Handler: social.MessageActionHandler(serverCtx),
			},
			{
				Method:  http.MethodGet,
				Path:    "/message/chat",
				Handler: social.MessageChatHandler(serverCtx),
			},
		},
		rest.WithJwt(serverCtx.Config.Auth.AccessSecret),
	)
}
