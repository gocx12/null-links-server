version: "3.0"

networks:
  web-network:           # 网络
    driver: bridge    # 桥接模式

services:
  # etcd:
  #   image: bitnami/etcd:latest  # 镜像k
  #   container_name: etcd       # 容器名 --name
  #   restart: always             # 总是重启
  #   networks:
  #     - web-network                # 使用的网络 --network
  #   ports:                      # 端口映射 -p
  #     - "2379:2379"
  #     - "2380:2380"
  #   environment:                # 环境变量 --env
  #     - ALLOW_NONE_AUTHENTICATION=yes                       # 允许不用密码登录
  #     - ETCD_NAME=etcd                                     # etcd 的名字
  #     # - ETCD_INITIAL_ADVERTISE_PEER_URLS=http://etcd:2380  # 列出这个成员的伙伴 URL 以便通告给集群的其他成员
  #     # - ETCD_LISTEN_PEER_URLS=http://0.0.0.0:2380           # 用于监听伙伴通讯的URL列表
  #     - ETCD_LISTEN_CLIENT_URLS=http://0.0.0.0:2379         # 用于监听客户端通讯的URL列表
  #     - ETCD_ADVERTISE_CLIENT_URLS=http://etcd:2379        # 列出这个成员的客户端URL，通告给集群中的其他成员
  #   volumes:
  #     - /data/null-links/etcd/data:/bitnami/etcd/data                            # 挂载的数据卷
    
  zookeeper:
    image: wurstmeister/zookeeper
    ports:
      - "2181:2181"
    volumes:
      - /data/null-links/zookeeper:/data
      - /data/null-links/zookeeper:/datalog
      - /data/null-links/zookeeper:/logs
    container_name: zookeeper
    networks:
      - web-network

  kafka:
    image: wurstmeister/kafka
    ports:
      - "9092:9092"
      # - "29092:29092"
      # - "19094:19094"
    environment:
      KAFKA_ADVERTISED_HOST_NAME: kafka
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENERS: PLAINTEXT://:9092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://192.168.0.50:9092

      # KAFKA_LISTENERS: INSIDE://:9092,OUTSIDE://:19004
      # KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:9092,OUTSIDE://159.138.156.216:19094
      # KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      # KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE

      # KAFKA_BROKER_ID: 0
      KAFKA_CREATE_TOPICS: "validation-email:1:1,weblink-cover:1:1"
    volumes:
      - /data/null-links/kafka:/kafka
    depends_on:
      - zookeeper
    hostname: kafka
    container_name: kafka
    restart: always
    networks:
      - web-network

  # kafka-ui:
  #   image: provectuslabs/kafka-ui:latest
  #   container_name: kafka-ui
  #   ports:
  #     - 9093:8080
  #   depends_on:
  #     - kafka
  #   environment:
  #     DYNAMIC_CONFIG_ENABLED: "TRUE"

  minio:
    image: bitnami/minio
    hostname: "minio"
    ports:
      - 9000:9000 # api 端口
      - 9001:9001 # 控制台端口
    privileged: true
    environment:
      MINIO_ROOT_USER: admin    #管理后台用户名
      MINIO_ROOT_PASSWORD: admin123 #管理后台密码，最小8个字符
    volumes:
      - /data/null-links/minio/data:/data               #映射当前目录下的data目录至容器内/data目录
      - /data/null-links/minio/config:/root/.minio/     #映射配置目录
    # command: server /data
    restart: always
    container_name: minio

  # redis:
  #   image: redis:4.0.1
  #   container_name: redis
  #   volumes:
  #     - /data/null-links/redis/datadir:/data
  #     - /data/null-links/redis/conf/redis.conf:/usr/local/etc/redis/redis.conf
  #     - /data/null-links/redis/logs:/logs
  #   command: redis-server
  #   ports:
  #     - 6379:6379
  redis:
    image: redislabs/rebloom
    container_name: redis
    restart: always
    ports:
      - 6379:6379
    volumes:
      - /data/null-links/redis/data:/data
      - /data/null-links/redis/conf/redis.conf:/usr/lib/redis/redis.conf
      - /data/null-links/redis/logs:/logs
    command: redis-server
    networks:
      - web-network